name: Build Citron (Nightly)
concurrency:
  group: build-nightly-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: "0 7 1/5 * *"
  workflow_dispatch: {}

jobs:
  build:
    name: "${{ matrix.name }} (${{ matrix.arch }})"
    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 60
    env:
      CUSTOM_VERSION: "0.7.0-8"
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            optimized: false
            name: "Citron build (Normal)"
            arch: x86_64
          - runs-on: ubuntu-latest
            optimized: true
            name: "Citron Build (Optimized)"
            arch: x86_64
          # - runs-on: ubuntu-24.04-arm
          #   name: "Citron build (Normal)"
          #   optimized: false
          #   arch: aarch64
    container: ghcr.io/pkgforge-dev/archlinux:latest
    steps:
      - name: Install Git
        run: pacman -Sy --noconfirm git

      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: 'recursive'

      - name: Install dependencies
        run: chmod +x ./get-dependencies.sh && ./get-dependencies.sh

      - name: Build Citron from source
        run: |
          NPROC_VAL=$(nproc --all)
          JOBS_VAL=$((NPROC_VAL > 2 ? NPROC_VAL / 2 : 1))
          if ${{ matrix.optimized }}; then
            JOBS=${JOBS_VAL} DEVEL=true chmod +x ./build-citron.sh && JOBS=${JOBS_VAL} DEVEL=true ./build-citron.sh v3
          else
            JOBS=${JOBS_VAL} DEVEL=true chmod +x ./build-citron.sh && JOBS=${JOBS_VAL} DEVEL=true ./build-citron.sh
          fi

      - name: Package AppImage
        run: |
          if ${{ matrix.optimized }}; then
            DEVEL=true chmod +x ./package-citron.sh && DEVEL=true ./package-citron.sh v3
          else
            DEVEL=true chmod +x ./package-citron.sh && DEVEL=true ./package-citron.sh
          fi

      - name: Upload AppImage
        uses: actions/upload-artifact@v4.6.2
        with:
          name: AppImage-${{ matrix.optimized && 'optimized' || 'normal' }}-${{ matrix.arch }}
          path: "dist"

      - name: Upload version file
        if: ${{ !matrix.optimized && matrix.arch == 'x86_64' }}
        uses: actions/upload-artifact@v4.6.2
        with:
          name: version
          path: "dist/version"

  release:
    if: ${{ github.ref_name == 'main' }}
    name: "release"
    needs: [build]
    permissions:
      actions: read
      security-events: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.3.0
        with:
          pattern: AppImage-*
          merge-multiple: true
          path: .

      - uses: actions/download-artifact@v4.3.0
        with:
          name: version
          path: .

      - name: Read version
        run: |
          export VERSION="$(cat version)"
          echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"

      - name: Del Previous Release
        run: gh release delete "nightly" --repo "${GITHUB_REPOSITORY}" --cleanup-tag -y && sleep 5
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true

      - uses: softprops/action-gh-release@v2.2.2
        with:
          name: "Continuous Build (Nightly Version: ${{ env.APP_VERSION }})"
          tag_name: "nightly"
          prerelease: true
          draft: false
          generate_release_notes: false
          make_latest: false
          files: |
            *.AppImage*
            *.tar.zst
